// <auto-generated/>

namespace DXNET.DXGI
{
    /// <summary>
    /// No documentation.
    /// </summary>
    /// <unmanaged>DXGI_COMPUTE_PREEMPTION_GRANULARITY</unmanaged>
    /// <unmanaged-short>DXGI_COMPUTE_PREEMPTION_GRANULARITY</unmanaged-short>
    public enum ComputePreemptionGranularity : System.Int32
    {
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_COMPUTE_PREEMPTION_DMA_BUFFER_BOUNDARY</unmanaged>
        /// <unmanaged-short>DXGI_COMPUTE_PREEMPTION_DMA_BUFFER_BOUNDARY</unmanaged-short>
        DmaBufferBoundary = unchecked ((System.Int32)(0)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_COMPUTE_PREEMPTION_DISPATCH_BOUNDARY</unmanaged>
        /// <unmanaged-short>DXGI_COMPUTE_PREEMPTION_DISPATCH_BOUNDARY</unmanaged-short>
        DispatchBoundary = unchecked ((System.Int32)(1)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_COMPUTE_PREEMPTION_THREAD_GROUP_BOUNDARY</unmanaged>
        /// <unmanaged-short>DXGI_COMPUTE_PREEMPTION_THREAD_GROUP_BOUNDARY</unmanaged-short>
        ThreadGroupBoundary = unchecked ((System.Int32)(2)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_COMPUTE_PREEMPTION_THREAD_BOUNDARY</unmanaged>
        /// <unmanaged-short>DXGI_COMPUTE_PREEMPTION_THREAD_BOUNDARY</unmanaged-short>
        ThreadBoundary = unchecked ((System.Int32)(3)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_COMPUTE_PREEMPTION_INSTRUCTION_BOUNDARY</unmanaged>
        /// <unmanaged-short>DXGI_COMPUTE_PREEMPTION_INSTRUCTION_BOUNDARY</unmanaged-short>
        InstructionBoundary = unchecked ((System.Int32)(4))}

    [System.FlagsAttribute]
    /// <summary>
    /// No documentation.
    /// </summary>
    /// <unmanaged>DXGI_DEBUG_RLO_FLAGS</unmanaged>
    /// <unmanaged-short>DXGI_DEBUG_RLO_FLAGS</unmanaged-short>
    public enum DebugRloFlags : System.Int32
    {
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_DEBUG_RLO_SUMMARY</unmanaged>
        /// <unmanaged-short>DXGI_DEBUG_RLO_SUMMARY</unmanaged-short>
        Summary = unchecked ((System.Int32)(1)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_DEBUG_RLO_DETAIL</unmanaged>
        /// <unmanaged-short>DXGI_DEBUG_RLO_DETAIL</unmanaged-short>
        Detail = unchecked ((System.Int32)(2)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_DEBUG_RLO_IGNORE_INTERNAL</unmanaged>
        /// <unmanaged-short>DXGI_DEBUG_RLO_IGNORE_INTERNAL</unmanaged-short>
        IgnoreInternal = unchecked ((System.Int32)(4)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_DEBUG_RLO_ALL</unmanaged>
        /// <unmanaged-short>DXGI_DEBUG_RLO_ALL</unmanaged-short>
        All = unchecked ((System.Int32)(7)),
        /// <summary>
        /// None
        /// </summary>
        /// <unmanaged>None</unmanaged>
        /// <unmanaged-short>None</unmanaged-short>
        None = unchecked ((System.Int32)(0))}

    [System.FlagsAttribute]
    /// <summary>
    /// No documentation.
    /// </summary>
    /// <unmanaged>DXGI_ENUM_MODES_FLAGS</unmanaged>
    /// <unmanaged-short>DXGI_ENUM_MODES_FLAGS</unmanaged-short>
    public enum DisplayModeEnumerationFlags : System.Int32
    {
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_ENUM_MODES_INTERLACED</unmanaged>
        /// <unmanaged-short>DXGI_ENUM_MODES_INTERLACED</unmanaged-short>
        Interlaced = unchecked ((System.Int32)(1)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_ENUM_MODES_SCALING</unmanaged>
        /// <unmanaged-short>DXGI_ENUM_MODES_SCALING</unmanaged-short>
        Scaling = unchecked ((System.Int32)(2)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_ENUM_MODES_STEREO</unmanaged>
        /// <unmanaged-short>DXGI_ENUM_MODES_STEREO</unmanaged-short>
        Stereo = unchecked ((System.Int32)(4)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_ENUM_MODES_DISABLED_STEREO</unmanaged>
        /// <unmanaged-short>DXGI_ENUM_MODES_DISABLED_STEREO</unmanaged-short>
        DisabledStereo = unchecked ((System.Int32)(8))}

    /// <summary>
    /// No documentation.
    /// </summary>
    /// <unmanaged>DXGI_MODE_ROTATION</unmanaged>
    /// <unmanaged-short>DXGI_MODE_ROTATION</unmanaged-short>
    public enum DisplayModeRotation : System.Int32
    {
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_MODE_ROTATION_UNSPECIFIED</unmanaged>
        /// <unmanaged-short>DXGI_MODE_ROTATION_UNSPECIFIED</unmanaged-short>
        Unspecified = unchecked ((System.Int32)(0)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_MODE_ROTATION_IDENTITY</unmanaged>
        /// <unmanaged-short>DXGI_MODE_ROTATION_IDENTITY</unmanaged-short>
        Identity = unchecked ((System.Int32)(1)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_MODE_ROTATION_ROTATE90</unmanaged>
        /// <unmanaged-short>DXGI_MODE_ROTATION_ROTATE90</unmanaged-short>
        Rotate90 = unchecked ((System.Int32)(2)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_MODE_ROTATION_ROTATE180</unmanaged>
        /// <unmanaged-short>DXGI_MODE_ROTATION_ROTATE180</unmanaged-short>
        Rotate180 = unchecked ((System.Int32)(3)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_MODE_ROTATION_ROTATE270</unmanaged>
        /// <unmanaged-short>DXGI_MODE_ROTATION_ROTATE270</unmanaged-short>
        Rotate270 = unchecked ((System.Int32)(4))}

    /// <summary>
    /// No documentation.
    /// </summary>
    /// <unmanaged>DXGI_MODE_SCALING</unmanaged>
    /// <unmanaged-short>DXGI_MODE_SCALING</unmanaged-short>
    public enum DisplayModeScaling : System.Int32
    {
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_MODE_SCALING_UNSPECIFIED</unmanaged>
        /// <unmanaged-short>DXGI_MODE_SCALING_UNSPECIFIED</unmanaged-short>
        Unspecified = unchecked ((System.Int32)(0)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_MODE_SCALING_CENTERED</unmanaged>
        /// <unmanaged-short>DXGI_MODE_SCALING_CENTERED</unmanaged-short>
        Centered = unchecked ((System.Int32)(1)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_MODE_SCALING_STRETCHED</unmanaged>
        /// <unmanaged-short>DXGI_MODE_SCALING_STRETCHED</unmanaged-short>
        Stretched = unchecked ((System.Int32)(2))}

    /// <summary>
    /// No documentation.
    /// </summary>
    /// <unmanaged>DXGI_MODE_SCANLINE_ORDER</unmanaged>
    /// <unmanaged-short>DXGI_MODE_SCANLINE_ORDER</unmanaged-short>
    public enum DisplayModeScanlineOrder : System.Int32
    {
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_MODE_SCANLINE_ORDER_UNSPECIFIED</unmanaged>
        /// <unmanaged-short>DXGI_MODE_SCANLINE_ORDER_UNSPECIFIED</unmanaged-short>
        Unspecified = unchecked ((System.Int32)(0)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_MODE_SCANLINE_ORDER_PROGRESSIVE</unmanaged>
        /// <unmanaged-short>DXGI_MODE_SCANLINE_ORDER_PROGRESSIVE</unmanaged-short>
        Progressive = unchecked ((System.Int32)(1)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_MODE_SCANLINE_ORDER_UPPER_FIELD_FIRST</unmanaged>
        /// <unmanaged-short>DXGI_MODE_SCANLINE_ORDER_UPPER_FIELD_FIRST</unmanaged-short>
        UpperFieldFirst = unchecked ((System.Int32)(2)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_MODE_SCANLINE_ORDER_LOWER_FIELD_FIRST</unmanaged>
        /// <unmanaged-short>DXGI_MODE_SCANLINE_ORDER_LOWER_FIELD_FIRST</unmanaged-short>
        LowerFieldFirst = unchecked ((System.Int32)(3))}

    /// <summary>
    /// No documentation.
    /// </summary>
    /// <unmanaged>DXGI_STATUS</unmanaged>
    /// <unmanaged-short>DXGI_STATUS</unmanaged-short>
    public enum DXGIStatus : System.Int32
    {
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_STATUS_OCCLUDED</unmanaged>
        /// <unmanaged-short>DXGI_STATUS_OCCLUDED</unmanaged-short>
        Occluded = unchecked ((System.Int32)(142213121)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_STATUS_CLIPPED</unmanaged>
        /// <unmanaged-short>DXGI_STATUS_CLIPPED</unmanaged-short>
        Clipped = unchecked ((System.Int32)(142213122)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_STATUS_NO_REDIRECTION</unmanaged>
        /// <unmanaged-short>DXGI_STATUS_NO_REDIRECTION</unmanaged-short>
        NoRedirection = unchecked ((System.Int32)(142213124)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_STATUS_NO_DESKTOP_ACCESS</unmanaged>
        /// <unmanaged-short>DXGI_STATUS_NO_DESKTOP_ACCESS</unmanaged-short>
        NoDesktopAccess = unchecked ((System.Int32)(142213125)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_STATUS_GRAPHICS_VIDPN_SOURCE_IN_USE</unmanaged>
        /// <unmanaged-short>DXGI_STATUS_GRAPHICS_VIDPN_SOURCE_IN_USE</unmanaged-short>
        GraphicsVidpnSourceInUse = unchecked ((System.Int32)(142213126)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_STATUS_MODE_CHANGED</unmanaged>
        /// <unmanaged-short>DXGI_STATUS_MODE_CHANGED</unmanaged-short>
        ModeChanged = unchecked ((System.Int32)(142213127)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_STATUS_MODE_CHANGE_IN_PROGRESS</unmanaged>
        /// <unmanaged-short>DXGI_STATUS_MODE_CHANGE_IN_PROGRESS</unmanaged-short>
        ModeChangeInProgress = unchecked ((System.Int32)(142213128)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_STATUS_UNOCCLUDED</unmanaged>
        /// <unmanaged-short>DXGI_STATUS_UNOCCLUDED</unmanaged-short>
        Unoccluded = unchecked ((System.Int32)(142213129)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_STATUS_DDA_WAS_STILL_DRAWING</unmanaged>
        /// <unmanaged-short>DXGI_STATUS_DDA_WAS_STILL_DRAWING</unmanaged-short>
        DdaWasStillDrawing = unchecked ((System.Int32)(142213130)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_STATUS_PRESENT_REQUIRED</unmanaged>
        /// <unmanaged-short>DXGI_STATUS_PRESENT_REQUIRED</unmanaged-short>
        PresentRequired = unchecked ((System.Int32)(142213167))}

    /// <summary>
    /// No documentation.
    /// </summary>
    /// <unmanaged>DXGI_FEATURE</unmanaged>
    /// <unmanaged-short>DXGI_FEATURE</unmanaged-short>
    public enum Feature : System.Int32
    {
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FEATURE_PRESENT_ALLOW_TEARING</unmanaged>
        /// <unmanaged-short>DXGI_FEATURE_PRESENT_ALLOW_TEARING</unmanaged-short>
        PresentAllowTearing = unchecked ((System.Int32)(0))}

    /// <summary>
    /// No documentation.
    /// </summary>
    /// <unmanaged>DXGI_FORMAT</unmanaged>
    /// <unmanaged-short>DXGI_FORMAT</unmanaged-short>
    public enum Format : System.Int32
    {
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_UNKNOWN</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_UNKNOWN</unmanaged-short>
        Unknown = unchecked ((System.Int32)(0)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_R32G32B32A32_TYPELESS</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_R32G32B32A32_TYPELESS</unmanaged-short>
        R32G32B32A32_Typeless = unchecked ((System.Int32)(1)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_R32G32B32A32_FLOAT</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_R32G32B32A32_FLOAT</unmanaged-short>
        R32G32B32A32_Float = unchecked ((System.Int32)(2)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_R32G32B32A32_UINT</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_R32G32B32A32_UINT</unmanaged-short>
        R32G32B32A32_UInt = unchecked ((System.Int32)(3)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_R32G32B32A32_SINT</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_R32G32B32A32_SINT</unmanaged-short>
        R32G32B32A32_SInt = unchecked ((System.Int32)(4)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_R32G32B32_TYPELESS</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_R32G32B32_TYPELESS</unmanaged-short>
        R32G32B32_Typeless = unchecked ((System.Int32)(5)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_R32G32B32_FLOAT</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_R32G32B32_FLOAT</unmanaged-short>
        R32G32B32_Float = unchecked ((System.Int32)(6)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_R32G32B32_UINT</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_R32G32B32_UINT</unmanaged-short>
        R32G32B32_UInt = unchecked ((System.Int32)(7)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_R32G32B32_SINT</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_R32G32B32_SINT</unmanaged-short>
        R32G32B32_SInt = unchecked ((System.Int32)(8)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_R16G16B16A16_TYPELESS</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_R16G16B16A16_TYPELESS</unmanaged-short>
        R16G16B16A16_Typeless = unchecked ((System.Int32)(9)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_R16G16B16A16_FLOAT</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_R16G16B16A16_FLOAT</unmanaged-short>
        R16G16B16A16_Float = unchecked ((System.Int32)(10)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_R16G16B16A16_UNORM</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_R16G16B16A16_UNORM</unmanaged-short>
        R16G16B16A16_UNorm = unchecked ((System.Int32)(11)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_R16G16B16A16_UINT</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_R16G16B16A16_UINT</unmanaged-short>
        R16G16B16A16_UInt = unchecked ((System.Int32)(12)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_R16G16B16A16_SNORM</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_R16G16B16A16_SNORM</unmanaged-short>
        R16G16B16A16_SNorm = unchecked ((System.Int32)(13)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_R16G16B16A16_SINT</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_R16G16B16A16_SINT</unmanaged-short>
        R16G16B16A16_SInt = unchecked ((System.Int32)(14)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_R32G32_TYPELESS</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_R32G32_TYPELESS</unmanaged-short>
        R32G32_Typeless = unchecked ((System.Int32)(15)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_R32G32_FLOAT</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_R32G32_FLOAT</unmanaged-short>
        R32G32_Float = unchecked ((System.Int32)(16)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_R32G32_UINT</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_R32G32_UINT</unmanaged-short>
        R32G32_UInt = unchecked ((System.Int32)(17)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_R32G32_SINT</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_R32G32_SINT</unmanaged-short>
        R32G32_SInt = unchecked ((System.Int32)(18)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_R32G8X24_TYPELESS</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_R32G8X24_TYPELESS</unmanaged-short>
        R32G8X24_Typeless = unchecked ((System.Int32)(19)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_D32_FLOAT_S8X24_UINT</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_D32_FLOAT_S8X24_UINT</unmanaged-short>
        D32_Float_S8X24_UInt = unchecked ((System.Int32)(20)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_R32_FLOAT_X8X24_TYPELESS</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_R32_FLOAT_X8X24_TYPELESS</unmanaged-short>
        R32_Float_X8X24_Typeless = unchecked ((System.Int32)(21)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_X32_TYPELESS_G8X24_UINT</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_X32_TYPELESS_G8X24_UINT</unmanaged-short>
        X32_Typeless_G8X24_UInt = unchecked ((System.Int32)(22)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_R10G10B10A2_TYPELESS</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_R10G10B10A2_TYPELESS</unmanaged-short>
        R10G10B10A2_Typeless = unchecked ((System.Int32)(23)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_R10G10B10A2_UNORM</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_R10G10B10A2_UNORM</unmanaged-short>
        R10G10B10A2_UNorm = unchecked ((System.Int32)(24)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_R10G10B10A2_UINT</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_R10G10B10A2_UINT</unmanaged-short>
        R10G10B10A2_UInt = unchecked ((System.Int32)(25)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_R11G11B10_FLOAT</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_R11G11B10_FLOAT</unmanaged-short>
        R11G11B10_Float = unchecked ((System.Int32)(26)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_R8G8B8A8_TYPELESS</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_R8G8B8A8_TYPELESS</unmanaged-short>
        R8G8B8A8_Typeless = unchecked ((System.Int32)(27)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_R8G8B8A8_UNORM</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_R8G8B8A8_UNORM</unmanaged-short>
        R8G8B8A8_UNorm = unchecked ((System.Int32)(28)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_R8G8B8A8_UNORM_SRGB</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_R8G8B8A8_UNORM_SRGB</unmanaged-short>
        R8G8B8A8_UNorm_SRgb = unchecked ((System.Int32)(29)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_R8G8B8A8_UINT</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_R8G8B8A8_UINT</unmanaged-short>
        R8G8B8A8_UInt = unchecked ((System.Int32)(30)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_R8G8B8A8_SNORM</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_R8G8B8A8_SNORM</unmanaged-short>
        R8G8B8A8_SNorm = unchecked ((System.Int32)(31)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_R8G8B8A8_SINT</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_R8G8B8A8_SINT</unmanaged-short>
        R8G8B8A8_SInt = unchecked ((System.Int32)(32)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_R16G16_TYPELESS</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_R16G16_TYPELESS</unmanaged-short>
        R16G16_Typeless = unchecked ((System.Int32)(33)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_R16G16_FLOAT</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_R16G16_FLOAT</unmanaged-short>
        R16G16_Float = unchecked ((System.Int32)(34)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_R16G16_UNORM</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_R16G16_UNORM</unmanaged-short>
        R16G16_UNorm = unchecked ((System.Int32)(35)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_R16G16_UINT</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_R16G16_UINT</unmanaged-short>
        R16G16_UInt = unchecked ((System.Int32)(36)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_R16G16_SNORM</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_R16G16_SNORM</unmanaged-short>
        R16G16_SNorm = unchecked ((System.Int32)(37)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_R16G16_SINT</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_R16G16_SINT</unmanaged-short>
        R16G16_SInt = unchecked ((System.Int32)(38)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_R32_TYPELESS</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_R32_TYPELESS</unmanaged-short>
        R32_Typeless = unchecked ((System.Int32)(39)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_D32_FLOAT</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_D32_FLOAT</unmanaged-short>
        D32_Float = unchecked ((System.Int32)(40)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_R32_FLOAT</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_R32_FLOAT</unmanaged-short>
        R32_Float = unchecked ((System.Int32)(41)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_R32_UINT</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_R32_UINT</unmanaged-short>
        R32_UInt = unchecked ((System.Int32)(42)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_R32_SINT</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_R32_SINT</unmanaged-short>
        R32_SInt = unchecked ((System.Int32)(43)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_R24G8_TYPELESS</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_R24G8_TYPELESS</unmanaged-short>
        R24G8_Typeless = unchecked ((System.Int32)(44)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_D24_UNORM_S8_UINT</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_D24_UNORM_S8_UINT</unmanaged-short>
        D24_UNorm_S8_UInt = unchecked ((System.Int32)(45)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_R24_UNORM_X8_TYPELESS</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_R24_UNORM_X8_TYPELESS</unmanaged-short>
        R24_UNorm_X8_Typeless = unchecked ((System.Int32)(46)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_X24_TYPELESS_G8_UINT</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_X24_TYPELESS_G8_UINT</unmanaged-short>
        X24_Typeless_G8_UInt = unchecked ((System.Int32)(47)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_R8G8_TYPELESS</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_R8G8_TYPELESS</unmanaged-short>
        R8G8_Typeless = unchecked ((System.Int32)(48)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_R8G8_UNORM</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_R8G8_UNORM</unmanaged-short>
        R8G8_UNorm = unchecked ((System.Int32)(49)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_R8G8_UINT</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_R8G8_UINT</unmanaged-short>
        R8G8_UInt = unchecked ((System.Int32)(50)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_R8G8_SNORM</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_R8G8_SNORM</unmanaged-short>
        R8G8_SNorm = unchecked ((System.Int32)(51)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_R8G8_SINT</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_R8G8_SINT</unmanaged-short>
        R8G8_SInt = unchecked ((System.Int32)(52)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_R16_TYPELESS</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_R16_TYPELESS</unmanaged-short>
        R16_Typeless = unchecked ((System.Int32)(53)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_R16_FLOAT</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_R16_FLOAT</unmanaged-short>
        R16_Float = unchecked ((System.Int32)(54)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_D16_UNORM</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_D16_UNORM</unmanaged-short>
        D16_UNorm = unchecked ((System.Int32)(55)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_R16_UNORM</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_R16_UNORM</unmanaged-short>
        R16_UNorm = unchecked ((System.Int32)(56)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_R16_UINT</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_R16_UINT</unmanaged-short>
        R16_UInt = unchecked ((System.Int32)(57)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_R16_SNORM</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_R16_SNORM</unmanaged-short>
        R16_SNorm = unchecked ((System.Int32)(58)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_R16_SINT</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_R16_SINT</unmanaged-short>
        R16_SInt = unchecked ((System.Int32)(59)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_R8_TYPELESS</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_R8_TYPELESS</unmanaged-short>
        R8_Typeless = unchecked ((System.Int32)(60)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_R8_UNORM</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_R8_UNORM</unmanaged-short>
        R8_UNorm = unchecked ((System.Int32)(61)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_R8_UINT</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_R8_UINT</unmanaged-short>
        R8_UInt = unchecked ((System.Int32)(62)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_R8_SNORM</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_R8_SNORM</unmanaged-short>
        R8_SNorm = unchecked ((System.Int32)(63)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_R8_SINT</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_R8_SINT</unmanaged-short>
        R8_SInt = unchecked ((System.Int32)(64)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_A8_UNORM</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_A8_UNORM</unmanaged-short>
        A8_UNorm = unchecked ((System.Int32)(65)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_R1_UNORM</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_R1_UNORM</unmanaged-short>
        R1_UNorm = unchecked ((System.Int32)(66)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_R9G9B9E5_SHAREDEXP</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_R9G9B9E5_SHAREDEXP</unmanaged-short>
        R9G9B9E5_Sharedexp = unchecked ((System.Int32)(67)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_R8G8_B8G8_UNORM</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_R8G8_B8G8_UNORM</unmanaged-short>
        R8G8_B8G8_UNorm = unchecked ((System.Int32)(68)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_G8R8_G8B8_UNORM</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_G8R8_G8B8_UNORM</unmanaged-short>
        G8R8_G8B8_UNorm = unchecked ((System.Int32)(69)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_BC1_TYPELESS</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_BC1_TYPELESS</unmanaged-short>
        BC1_Typeless = unchecked ((System.Int32)(70)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_BC1_UNORM</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_BC1_UNORM</unmanaged-short>
        BC1_UNorm = unchecked ((System.Int32)(71)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_BC1_UNORM_SRGB</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_BC1_UNORM_SRGB</unmanaged-short>
        BC1_UNorm_SRgb = unchecked ((System.Int32)(72)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_BC2_TYPELESS</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_BC2_TYPELESS</unmanaged-short>
        BC2_Typeless = unchecked ((System.Int32)(73)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_BC2_UNORM</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_BC2_UNORM</unmanaged-short>
        BC2_UNorm = unchecked ((System.Int32)(74)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_BC2_UNORM_SRGB</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_BC2_UNORM_SRGB</unmanaged-short>
        BC2_UNorm_SRgb = unchecked ((System.Int32)(75)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_BC3_TYPELESS</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_BC3_TYPELESS</unmanaged-short>
        BC3_Typeless = unchecked ((System.Int32)(76)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_BC3_UNORM</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_BC3_UNORM</unmanaged-short>
        BC3_UNorm = unchecked ((System.Int32)(77)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_BC3_UNORM_SRGB</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_BC3_UNORM_SRGB</unmanaged-short>
        BC3_UNorm_SRgb = unchecked ((System.Int32)(78)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_BC4_TYPELESS</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_BC4_TYPELESS</unmanaged-short>
        BC4_Typeless = unchecked ((System.Int32)(79)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_BC4_UNORM</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_BC4_UNORM</unmanaged-short>
        BC4_UNorm = unchecked ((System.Int32)(80)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_BC4_SNORM</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_BC4_SNORM</unmanaged-short>
        BC4_SNorm = unchecked ((System.Int32)(81)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_BC5_TYPELESS</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_BC5_TYPELESS</unmanaged-short>
        BC5_Typeless = unchecked ((System.Int32)(82)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_BC5_UNORM</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_BC5_UNORM</unmanaged-short>
        BC5_UNorm = unchecked ((System.Int32)(83)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_BC5_SNORM</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_BC5_SNORM</unmanaged-short>
        BC5_SNorm = unchecked ((System.Int32)(84)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_B5G6R5_UNORM</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_B5G6R5_UNORM</unmanaged-short>
        B5G6R5_UNorm = unchecked ((System.Int32)(85)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_B5G5R5A1_UNORM</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_B5G5R5A1_UNORM</unmanaged-short>
        B5G5R5A1_UNorm = unchecked ((System.Int32)(86)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_B8G8R8A8_UNORM</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_B8G8R8A8_UNORM</unmanaged-short>
        B8G8R8A8_UNorm = unchecked ((System.Int32)(87)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_B8G8R8X8_UNORM</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_B8G8R8X8_UNORM</unmanaged-short>
        B8G8R8X8_UNorm = unchecked ((System.Int32)(88)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_R10G10B10_XR_BIAS_A2_UNORM</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_R10G10B10_XR_BIAS_A2_UNORM</unmanaged-short>
        R10G10B10_Xr_Bias_A2_UNorm = unchecked ((System.Int32)(89)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_B8G8R8A8_TYPELESS</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_B8G8R8A8_TYPELESS</unmanaged-short>
        B8G8R8A8_Typeless = unchecked ((System.Int32)(90)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_B8G8R8A8_UNORM_SRGB</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_B8G8R8A8_UNORM_SRGB</unmanaged-short>
        B8G8R8A8_UNorm_SRgb = unchecked ((System.Int32)(91)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_B8G8R8X8_TYPELESS</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_B8G8R8X8_TYPELESS</unmanaged-short>
        B8G8R8X8_Typeless = unchecked ((System.Int32)(92)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_B8G8R8X8_UNORM_SRGB</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_B8G8R8X8_UNORM_SRGB</unmanaged-short>
        B8G8R8X8_UNorm_SRgb = unchecked ((System.Int32)(93)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_BC6H_TYPELESS</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_BC6H_TYPELESS</unmanaged-short>
        BC6H_Typeless = unchecked ((System.Int32)(94)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_BC6H_UF16</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_BC6H_UF16</unmanaged-short>
        BC6H_Uf16 = unchecked ((System.Int32)(95)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_BC6H_SF16</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_BC6H_SF16</unmanaged-short>
        BC6H_Sf16 = unchecked ((System.Int32)(96)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_BC7_TYPELESS</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_BC7_TYPELESS</unmanaged-short>
        BC7_Typeless = unchecked ((System.Int32)(97)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_BC7_UNORM</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_BC7_UNORM</unmanaged-short>
        BC7_UNorm = unchecked ((System.Int32)(98)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_BC7_UNORM_SRGB</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_BC7_UNORM_SRGB</unmanaged-short>
        BC7_UNorm_SRgb = unchecked ((System.Int32)(99)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_AYUV</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_AYUV</unmanaged-short>
        AYUV = unchecked ((System.Int32)(100)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_Y410</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_Y410</unmanaged-short>
        Y410 = unchecked ((System.Int32)(101)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_Y416</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_Y416</unmanaged-short>
        Y416 = unchecked ((System.Int32)(102)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_NV12</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_NV12</unmanaged-short>
        NV12 = unchecked ((System.Int32)(103)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_P010</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_P010</unmanaged-short>
        P010 = unchecked ((System.Int32)(104)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_P016</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_P016</unmanaged-short>
        P016 = unchecked ((System.Int32)(105)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_420_OPAQUE</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_420_OPAQUE</unmanaged-short>
        Opaque420 = unchecked ((System.Int32)(106)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_YUY2</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_YUY2</unmanaged-short>
        YUY2 = unchecked ((System.Int32)(107)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_Y210</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_Y210</unmanaged-short>
        Y210 = unchecked ((System.Int32)(108)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_Y216</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_Y216</unmanaged-short>
        Y216 = unchecked ((System.Int32)(109)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_NV11</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_NV11</unmanaged-short>
        NV11 = unchecked ((System.Int32)(110)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_AI44</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_AI44</unmanaged-short>
        AI44 = unchecked ((System.Int32)(111)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_IA44</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_IA44</unmanaged-short>
        IA44 = unchecked ((System.Int32)(112)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_P8</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_P8</unmanaged-short>
        P8 = unchecked ((System.Int32)(113)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_A8P8</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_A8P8</unmanaged-short>
        A8P8 = unchecked ((System.Int32)(114)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_B4G4R4A4_UNORM</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_B4G4R4A4_UNORM</unmanaged-short>
        B4G4R4A4_UNorm = unchecked ((System.Int32)(115)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_P208</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_P208</unmanaged-short>
        P208 = unchecked ((System.Int32)(130)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_V208</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_V208</unmanaged-short>
        V208 = unchecked ((System.Int32)(131)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FORMAT_V408</unmanaged>
        /// <unmanaged-short>DXGI_FORMAT_V408</unmanaged-short>
        V408 = unchecked ((System.Int32)(132))}

    /// <summary>
    /// No documentation.
    /// </summary>
    /// <unmanaged>DXGI_FRAME_PRESENTATION_MODE</unmanaged>
    /// <unmanaged-short>DXGI_FRAME_PRESENTATION_MODE</unmanaged-short>
    public enum FramePresentationMode : System.Int32
    {
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FRAME_PRESENTATION_MODE_COMPOSED</unmanaged>
        /// <unmanaged-short>DXGI_FRAME_PRESENTATION_MODE_COMPOSED</unmanaged-short>
        Composed = unchecked ((System.Int32)(0)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FRAME_PRESENTATION_MODE_OVERLAY</unmanaged>
        /// <unmanaged-short>DXGI_FRAME_PRESENTATION_MODE_OVERLAY</unmanaged-short>
        Overlay = unchecked ((System.Int32)(1)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FRAME_PRESENTATION_MODE_NONE</unmanaged>
        /// <unmanaged-short>DXGI_FRAME_PRESENTATION_MODE_NONE</unmanaged-short>
        None = unchecked ((System.Int32)(2)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_FRAME_PRESENTATION_MODE_COMPOSITION_FAILURE</unmanaged>
        /// <unmanaged-short>DXGI_FRAME_PRESENTATION_MODE_COMPOSITION_FAILURE</unmanaged-short>
        CompositionFailure = unchecked ((System.Int32)(3))}

    /// <summary>
    /// No documentation.
    /// </summary>
    /// <unmanaged>DXGI_GPU_PREFERENCE</unmanaged>
    /// <unmanaged-short>DXGI_GPU_PREFERENCE</unmanaged-short>
    public enum GpuPreferEnce : System.Int32
    {
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_GPU_PREFERENCE_UNSPECIFIED</unmanaged>
        /// <unmanaged-short>DXGI_GPU_PREFERENCE_UNSPECIFIED</unmanaged-short>
        Unspecified = unchecked ((System.Int32)(0)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_GPU_PREFERENCE_MINIMUM_POWER</unmanaged>
        /// <unmanaged-short>DXGI_GPU_PREFERENCE_MINIMUM_POWER</unmanaged-short>
        MinimumPower = unchecked ((System.Int32)(1)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_GPU_PREFERENCE_HIGH_PERFORMANCE</unmanaged>
        /// <unmanaged-short>DXGI_GPU_PREFERENCE_HIGH_PERFORMANCE</unmanaged-short>
        HighPerformance = unchecked ((System.Int32)(2))}

    /// <summary>
    /// No documentation.
    /// </summary>
    /// <unmanaged>DXGI_GRAPHICS_PREEMPTION_GRANULARITY</unmanaged>
    /// <unmanaged-short>DXGI_GRAPHICS_PREEMPTION_GRANULARITY</unmanaged-short>
    public enum GraphicsPreemptionGranularity : System.Int32
    {
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_GRAPHICS_PREEMPTION_DMA_BUFFER_BOUNDARY</unmanaged>
        /// <unmanaged-short>DXGI_GRAPHICS_PREEMPTION_DMA_BUFFER_BOUNDARY</unmanaged-short>
        DmaBufferBoundary = unchecked ((System.Int32)(0)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_GRAPHICS_PREEMPTION_PRIMITIVE_BOUNDARY</unmanaged>
        /// <unmanaged-short>DXGI_GRAPHICS_PREEMPTION_PRIMITIVE_BOUNDARY</unmanaged-short>
        PrimitiveBoundary = unchecked ((System.Int32)(1)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_GRAPHICS_PREEMPTION_TRIANGLE_BOUNDARY</unmanaged>
        /// <unmanaged-short>DXGI_GRAPHICS_PREEMPTION_TRIANGLE_BOUNDARY</unmanaged-short>
        TriangleBoundary = unchecked ((System.Int32)(2)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_GRAPHICS_PREEMPTION_PIXEL_BOUNDARY</unmanaged>
        /// <unmanaged-short>DXGI_GRAPHICS_PREEMPTION_PIXEL_BOUNDARY</unmanaged-short>
        PixelBoundary = unchecked ((System.Int32)(3)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_GRAPHICS_PREEMPTION_INSTRUCTION_BOUNDARY</unmanaged>
        /// <unmanaged-short>DXGI_GRAPHICS_PREEMPTION_INSTRUCTION_BOUNDARY</unmanaged-short>
        InstructionBoundary = unchecked ((System.Int32)(4))}

    [System.FlagsAttribute]
    /// <summary>
    /// No documentation.
    /// </summary>
    /// <unmanaged>DXGI_HARDWARE_COMPOSITION_SUPPORT_FLAGS</unmanaged>
    /// <unmanaged-short>DXGI_HARDWARE_COMPOSITION_SUPPORT_FLAGS</unmanaged-short>
    public enum HardwareCompositionSupportFlags : System.Int32
    {
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_HARDWARE_COMPOSITION_SUPPORT_FLAG_FULLSCREEN</unmanaged>
        /// <unmanaged-short>DXGI_HARDWARE_COMPOSITION_SUPPORT_FLAG_FULLSCREEN</unmanaged-short>
        FullScreen = unchecked ((System.Int32)(1)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_HARDWARE_COMPOSITION_SUPPORT_FLAG_WINDOWED</unmanaged>
        /// <unmanaged-short>DXGI_HARDWARE_COMPOSITION_SUPPORT_FLAG_WINDOWED</unmanaged-short>
        Windowed = unchecked ((System.Int32)(2)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_HARDWARE_COMPOSITION_SUPPORT_FLAG_CURSOR_STRETCHED</unmanaged>
        /// <unmanaged-short>DXGI_HARDWARE_COMPOSITION_SUPPORT_FLAG_CURSOR_STRETCHED</unmanaged-short>
        CursorStretched = unchecked ((System.Int32)(4)),
        /// <summary>
        /// None
        /// </summary>
        /// <unmanaged>None</unmanaged>
        /// <unmanaged-short>None</unmanaged-short>
        None = unchecked ((System.Int32)(0))}

    /// <summary>
    /// No documentation.
    /// </summary>
    /// <unmanaged>DXGI_HDR_METADATA_TYPE</unmanaged>
    /// <unmanaged-short>DXGI_HDR_METADATA_TYPE</unmanaged-short>
    public enum HdrMetadataType : System.Int32
    {
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_HDR_METADATA_TYPE_NONE</unmanaged>
        /// <unmanaged-short>DXGI_HDR_METADATA_TYPE_NONE</unmanaged-short>
        None = unchecked ((System.Int32)(0)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_HDR_METADATA_TYPE_HDR10</unmanaged>
        /// <unmanaged-short>DXGI_HDR_METADATA_TYPE_HDR10</unmanaged-short>
        Hdr10 = unchecked ((System.Int32)(1)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_HDR_METADATA_TYPE_HDR10PLUS</unmanaged>
        /// <unmanaged-short>DXGI_HDR_METADATA_TYPE_HDR10PLUS</unmanaged-short>
        Hdr10plus = unchecked ((System.Int32)(2))}

    /// <summary>
    /// No documentation.
    /// </summary>
    /// <unmanaged>DXGI_INFO_QUEUE_MESSAGE_CATEGORY</unmanaged>
    /// <unmanaged-short>DXGI_INFO_QUEUE_MESSAGE_CATEGORY</unmanaged-short>
    public enum InformationQueueMessageCategory : System.Int32
    {
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_INFO_QUEUE_MESSAGE_CATEGORY_UNKNOWN</unmanaged>
        /// <unmanaged-short>DXGI_INFO_QUEUE_MESSAGE_CATEGORY_UNKNOWN</unmanaged-short>
        Unknown = unchecked ((System.Int32)(0)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_INFO_QUEUE_MESSAGE_CATEGORY_MISCELLANEOUS</unmanaged>
        /// <unmanaged-short>DXGI_INFO_QUEUE_MESSAGE_CATEGORY_MISCELLANEOUS</unmanaged-short>
        Miscellaneous = unchecked ((System.Int32)(1)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_INFO_QUEUE_MESSAGE_CATEGORY_INITIALIZATION</unmanaged>
        /// <unmanaged-short>DXGI_INFO_QUEUE_MESSAGE_CATEGORY_INITIALIZATION</unmanaged-short>
        Initialization = unchecked ((System.Int32)(2)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_INFO_QUEUE_MESSAGE_CATEGORY_CLEANUP</unmanaged>
        /// <unmanaged-short>DXGI_INFO_QUEUE_MESSAGE_CATEGORY_CLEANUP</unmanaged-short>
        Cleanup = unchecked ((System.Int32)(3)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_INFO_QUEUE_MESSAGE_CATEGORY_COMPILATION</unmanaged>
        /// <unmanaged-short>DXGI_INFO_QUEUE_MESSAGE_CATEGORY_COMPILATION</unmanaged-short>
        Compilation = unchecked ((System.Int32)(4)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_INFO_QUEUE_MESSAGE_CATEGORY_STATE_CREATION</unmanaged>
        /// <unmanaged-short>DXGI_INFO_QUEUE_MESSAGE_CATEGORY_STATE_CREATION</unmanaged-short>
        StateCreation = unchecked ((System.Int32)(5)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_INFO_QUEUE_MESSAGE_CATEGORY_STATE_SETTING</unmanaged>
        /// <unmanaged-short>DXGI_INFO_QUEUE_MESSAGE_CATEGORY_STATE_SETTING</unmanaged-short>
        StateSetting = unchecked ((System.Int32)(6)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_INFO_QUEUE_MESSAGE_CATEGORY_STATE_GETTING</unmanaged>
        /// <unmanaged-short>DXGI_INFO_QUEUE_MESSAGE_CATEGORY_STATE_GETTING</unmanaged-short>
        StateGetting = unchecked ((System.Int32)(7)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_INFO_QUEUE_MESSAGE_CATEGORY_RESOURCE_MANIPULATION</unmanaged>
        /// <unmanaged-short>DXGI_INFO_QUEUE_MESSAGE_CATEGORY_RESOURCE_MANIPULATION</unmanaged-short>
        ResourceManipulation = unchecked ((System.Int32)(8)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_INFO_QUEUE_MESSAGE_CATEGORY_EXECUTION</unmanaged>
        /// <unmanaged-short>DXGI_INFO_QUEUE_MESSAGE_CATEGORY_EXECUTION</unmanaged-short>
        Execution = unchecked ((System.Int32)(9)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_INFO_QUEUE_MESSAGE_CATEGORY_SHADER</unmanaged>
        /// <unmanaged-short>DXGI_INFO_QUEUE_MESSAGE_CATEGORY_SHADER</unmanaged-short>
        Shader = unchecked ((System.Int32)(10))}

    /// <summary>
    /// No documentation.
    /// </summary>
    /// <unmanaged>DXGI_INFO_QUEUE_MESSAGE_SEVERITY</unmanaged>
    /// <unmanaged-short>DXGI_INFO_QUEUE_MESSAGE_SEVERITY</unmanaged-short>
    public enum InformationQueueMessageSeverity : System.Int32
    {
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_INFO_QUEUE_MESSAGE_SEVERITY_CORRUPTION</unmanaged>
        /// <unmanaged-short>DXGI_INFO_QUEUE_MESSAGE_SEVERITY_CORRUPTION</unmanaged-short>
        Corruption = unchecked ((System.Int32)(0)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_INFO_QUEUE_MESSAGE_SEVERITY_ERROR</unmanaged>
        /// <unmanaged-short>DXGI_INFO_QUEUE_MESSAGE_SEVERITY_ERROR</unmanaged-short>
        Error = unchecked ((System.Int32)(1)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_INFO_QUEUE_MESSAGE_SEVERITY_WARNING</unmanaged>
        /// <unmanaged-short>DXGI_INFO_QUEUE_MESSAGE_SEVERITY_WARNING</unmanaged-short>
        Warning = unchecked ((System.Int32)(2)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_INFO_QUEUE_MESSAGE_SEVERITY_INFO</unmanaged>
        /// <unmanaged-short>DXGI_INFO_QUEUE_MESSAGE_SEVERITY_INFO</unmanaged-short>
        Information = unchecked ((System.Int32)(3)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_INFO_QUEUE_MESSAGE_SEVERITY_MESSAGE</unmanaged>
        /// <unmanaged-short>DXGI_INFO_QUEUE_MESSAGE_SEVERITY_MESSAGE</unmanaged-short>
        Message = unchecked ((System.Int32)(4))}

    [System.FlagsAttribute]
    /// <summary>
    /// No documentation.
    /// </summary>
    /// <unmanaged>DXGI_MAP_FLAGS</unmanaged>
    /// <unmanaged-short>DXGI_MAP_FLAGS</unmanaged-short>
    public enum MapFlags : System.Int32
    {
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_MAP_READ</unmanaged>
        /// <unmanaged-short>DXGI_MAP_READ</unmanaged-short>
        Read = unchecked ((System.Int32)(1)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_MAP_WRITE</unmanaged>
        /// <unmanaged-short>DXGI_MAP_WRITE</unmanaged-short>
        Write = unchecked ((System.Int32)(2)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_MAP_DISCARD</unmanaged>
        /// <unmanaged-short>DXGI_MAP_DISCARD</unmanaged-short>
        Discard = unchecked ((System.Int32)(4))}

    /// <summary>
    /// No documentation.
    /// </summary>
    /// <unmanaged>DXGI_MEMORY_SEGMENT_GROUP</unmanaged>
    /// <unmanaged-short>DXGI_MEMORY_SEGMENT_GROUP</unmanaged-short>
    public enum MemorySegmentGroup : System.Int32
    {
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_MEMORY_SEGMENT_GROUP_LOCAL</unmanaged>
        /// <unmanaged-short>DXGI_MEMORY_SEGMENT_GROUP_LOCAL</unmanaged-short>
        Local = unchecked ((System.Int32)(0)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_MEMORY_SEGMENT_GROUP_NON_LOCAL</unmanaged>
        /// <unmanaged-short>DXGI_MEMORY_SEGMENT_GROUP_NON_LOCAL</unmanaged-short>
        NonLocal = unchecked ((System.Int32)(1))}

    [System.FlagsAttribute]
    /// <summary>
    /// No documentation.
    /// </summary>
    /// <unmanaged>DXGI_MULTIPLANE_OVERLAY_YCbCr_FLAGS</unmanaged>
    /// <unmanaged-short>DXGI_MULTIPLANE_OVERLAY_YCbCr_FLAGS</unmanaged-short>
    public enum MultiplaneOverlayYCbCrFlags : System.Int32
    {
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_MULTIPLANE_OVERLAY_YCbCr_FLAG_NOMINAL_RANGE</unmanaged>
        /// <unmanaged-short>DXGI_MULTIPLANE_OVERLAY_YCbCr_FLAG_NOMINAL_RANGE</unmanaged-short>
        NominalRange = unchecked ((System.Int32)(1)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_MULTIPLANE_OVERLAY_YCbCr_FLAG_BT709</unmanaged>
        /// <unmanaged-short>DXGI_MULTIPLANE_OVERLAY_YCbCr_FLAG_BT709</unmanaged-short>
        Bt709 = unchecked ((System.Int32)(2)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_MULTIPLANE_OVERLAY_YCbCr_FLAG_xvYCC</unmanaged>
        /// <unmanaged-short>DXGI_MULTIPLANE_OVERLAY_YCbCr_FLAG_xvYCC</unmanaged-short>
        XvYCC = unchecked ((System.Int32)(4)),
        /// <summary>
        /// None
        /// </summary>
        /// <unmanaged>None</unmanaged>
        /// <unmanaged-short>None</unmanaged-short>
        None = unchecked ((System.Int32)(0))}

    [System.FlagsAttribute]
    /// <summary>
    /// No documentation.
    /// </summary>
    /// <unmanaged>DXGI_OFFER_RESOURCE_FLAGS</unmanaged>
    /// <unmanaged-short>DXGI_OFFER_RESOURCE_FLAGS</unmanaged-short>
    public enum OfferResourceFlags : System.Int32
    {
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_OFFER_RESOURCE_FLAG_ALLOW_DECOMMIT</unmanaged>
        /// <unmanaged-short>DXGI_OFFER_RESOURCE_FLAG_ALLOW_DECOMMIT</unmanaged-short>
        AllowDecommit = unchecked ((System.Int32)(1)),
        /// <summary>
        /// None
        /// </summary>
        /// <unmanaged>None</unmanaged>
        /// <unmanaged-short>None</unmanaged-short>
        None = unchecked ((System.Int32)(0))}

    /// <summary>
    /// No documentation.
    /// </summary>
    /// <unmanaged>DXGI_OFFER_RESOURCE_PRIORITY</unmanaged>
    /// <unmanaged-short>DXGI_OFFER_RESOURCE_PRIORITY</unmanaged-short>
    public enum OfferResourcePriority : System.Int32
    {
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_OFFER_RESOURCE_PRIORITY_LOW</unmanaged>
        /// <unmanaged-short>DXGI_OFFER_RESOURCE_PRIORITY_LOW</unmanaged-short>
        Low = unchecked ((System.Int32)(1)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_OFFER_RESOURCE_PRIORITY_NORMAL</unmanaged>
        /// <unmanaged-short>DXGI_OFFER_RESOURCE_PRIORITY_NORMAL</unmanaged-short>
        Normal = unchecked ((System.Int32)(2)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_OFFER_RESOURCE_PRIORITY_HIGH</unmanaged>
        /// <unmanaged-short>DXGI_OFFER_RESOURCE_PRIORITY_HIGH</unmanaged-short>
        High = unchecked ((System.Int32)(3))}

    [System.FlagsAttribute]
    /// <summary>
    /// No documentation.
    /// </summary>
    /// <unmanaged>DXGI_OUTDUPL_FLAG</unmanaged>
    /// <unmanaged-short>DXGI_OUTDUPL_FLAG</unmanaged-short>
    public enum OutputDuplicateFlags : System.Int32
    {
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_OUTDUPL_COMPOSITED_UI_CAPTURE_ONLY</unmanaged>
        /// <unmanaged-short>DXGI_OUTDUPL_COMPOSITED_UI_CAPTURE_ONLY</unmanaged-short>
        CompositedUiCaptureOnly = unchecked ((System.Int32)(1)),
        /// <summary>
        /// None
        /// </summary>
        /// <unmanaged>None</unmanaged>
        /// <unmanaged-short>None</unmanaged-short>
        None = unchecked ((System.Int32)(0))}

    /// <summary>
    /// No documentation.
    /// </summary>
    /// <unmanaged>DXGI_OUTDUPL_POINTER_SHAPE_TYPE</unmanaged>
    /// <unmanaged-short>DXGI_OUTDUPL_POINTER_SHAPE_TYPE</unmanaged-short>
    public enum OutputDuplicatePointerShapeType : System.Int32
    {
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_OUTDUPL_POINTER_SHAPE_TYPE_MONOCHROME</unmanaged>
        /// <unmanaged-short>DXGI_OUTDUPL_POINTER_SHAPE_TYPE_MONOCHROME</unmanaged-short>
        Monochrome = unchecked ((System.Int32)(1)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_OUTDUPL_POINTER_SHAPE_TYPE_COLOR</unmanaged>
        /// <unmanaged-short>DXGI_OUTDUPL_POINTER_SHAPE_TYPE_COLOR</unmanaged-short>
        Color = unchecked ((System.Int32)(2)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_OUTDUPL_POINTER_SHAPE_TYPE_MASKED_COLOR</unmanaged>
        /// <unmanaged-short>DXGI_OUTDUPL_POINTER_SHAPE_TYPE_MASKED_COLOR</unmanaged-short>
        MaskedColor = unchecked ((System.Int32)(4))}

    [System.FlagsAttribute]
    /// <summary>
    /// No documentation.
    /// </summary>
    /// <unmanaged>DXGI_OVERLAY_COLOR_SPACE_SUPPORT_FLAG</unmanaged>
    /// <unmanaged-short>DXGI_OVERLAY_COLOR_SPACE_SUPPORT_FLAG</unmanaged-short>
    public enum OverlayColorSpaceSupportFlags : System.Int32
    {
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_OVERLAY_COLOR_SPACE_SUPPORT_FLAG_PRESENT</unmanaged>
        /// <unmanaged-short>DXGI_OVERLAY_COLOR_SPACE_SUPPORT_FLAG_PRESENT</unmanaged-short>
        Present = unchecked ((System.Int32)(1)),
        /// <summary>
        /// None
        /// </summary>
        /// <unmanaged>None</unmanaged>
        /// <unmanaged-short>None</unmanaged-short>
        None = unchecked ((System.Int32)(0))}

    [System.FlagsAttribute]
    /// <summary>
    /// No documentation.
    /// </summary>
    /// <unmanaged>DXGI_OVERLAY_SUPPORT_FLAG</unmanaged>
    /// <unmanaged-short>DXGI_OVERLAY_SUPPORT_FLAG</unmanaged-short>
    public enum OverlaySupportFlags : System.Int32
    {
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_OVERLAY_SUPPORT_FLAG_DIRECT</unmanaged>
        /// <unmanaged-short>DXGI_OVERLAY_SUPPORT_FLAG_DIRECT</unmanaged-short>
        Direct = unchecked ((System.Int32)(1)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_OVERLAY_SUPPORT_FLAG_SCALING</unmanaged>
        /// <unmanaged-short>DXGI_OVERLAY_SUPPORT_FLAG_SCALING</unmanaged-short>
        Scaling = unchecked ((System.Int32)(2))}

    [System.FlagsAttribute]
    /// <summary>
    /// No documentation.
    /// </summary>
    /// <unmanaged>DXGI_PRESENT_FLAGS</unmanaged>
    /// <unmanaged-short>DXGI_PRESENT_FLAGS</unmanaged-short>
    public enum PresentFlags : System.Int32
    {
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_PRESENT_TEST</unmanaged>
        /// <unmanaged-short>DXGI_PRESENT_TEST</unmanaged-short>
        Test = unchecked ((System.Int32)(1)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_PRESENT_DO_NOT_SEQUENCE</unmanaged>
        /// <unmanaged-short>DXGI_PRESENT_DO_NOT_SEQUENCE</unmanaged-short>
        DoNotSequence = unchecked ((System.Int32)(2)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_PRESENT_RESTART</unmanaged>
        /// <unmanaged-short>DXGI_PRESENT_RESTART</unmanaged-short>
        Restart = unchecked ((System.Int32)(4)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_PRESENT_DO_NOT_WAIT</unmanaged>
        /// <unmanaged-short>DXGI_PRESENT_DO_NOT_WAIT</unmanaged-short>
        DoNotWait = unchecked ((System.Int32)(8)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_PRESENT_STEREO_PREFER_RIGHT</unmanaged>
        /// <unmanaged-short>DXGI_PRESENT_STEREO_PREFER_RIGHT</unmanaged-short>
        StereoPreferRight = unchecked ((System.Int32)(16)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_PRESENT_STEREO_TEMPORARY_MONO</unmanaged>
        /// <unmanaged-short>DXGI_PRESENT_STEREO_TEMPORARY_MONO</unmanaged-short>
        StereoTemporaryMono = unchecked ((System.Int32)(32)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_PRESENT_RESTRICT_TO_OUTPUT</unmanaged>
        /// <unmanaged-short>DXGI_PRESENT_RESTRICT_TO_OUTPUT</unmanaged-short>
        RestrictToOutput = unchecked ((System.Int32)(64)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_PRESENT_USE_DURATION</unmanaged>
        /// <unmanaged-short>DXGI_PRESENT_USE_DURATION</unmanaged-short>
        UseDuration = unchecked ((System.Int32)(256)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_PRESENT_ALLOW_TEARING</unmanaged>
        /// <unmanaged-short>DXGI_PRESENT_ALLOW_TEARING</unmanaged-short>
        AllowTearing = unchecked ((System.Int32)(512)),
        /// <summary>
        /// None
        /// </summary>
        /// <unmanaged>None</unmanaged>
        /// <unmanaged-short>None</unmanaged-short>
        None = unchecked ((System.Int32)(0))}

    /// <summary>
    /// No documentation.
    /// </summary>
    /// <unmanaged>DXGI_RECLAIM_RESOURCE_RESULTS</unmanaged>
    /// <unmanaged-short>DXGI_RECLAIM_RESOURCE_RESULTS</unmanaged-short>
    public enum ReclaimResourceResults : System.Int32
    {
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_RECLAIM_RESOURCE_RESULT_OK</unmanaged>
        /// <unmanaged-short>DXGI_RECLAIM_RESOURCE_RESULT_OK</unmanaged-short>
        Ok = unchecked ((System.Int32)(0)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_RECLAIM_RESOURCE_RESULT_DISCARDED</unmanaged>
        /// <unmanaged-short>DXGI_RECLAIM_RESOURCE_RESULT_DISCARDED</unmanaged-short>
        Discarded = unchecked ((System.Int32)(1)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_RECLAIM_RESOURCE_RESULT_NOT_COMMITTED</unmanaged>
        /// <unmanaged-short>DXGI_RECLAIM_RESOURCE_RESULT_NOT_COMMITTED</unmanaged-short>
        NotCommitted = unchecked ((System.Int32)(2))}

    /// <summary>
    /// No documentation.
    /// </summary>
    /// <unmanaged>DXGI_RESIDENCY</unmanaged>
    /// <unmanaged-short>DXGI_RESIDENCY</unmanaged-short>
    public enum Residency : System.Int32
    {
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_RESIDENCY_FULLY_RESIDENT</unmanaged>
        /// <unmanaged-short>DXGI_RESIDENCY_FULLY_RESIDENT</unmanaged-short>
        FullyResident = unchecked ((System.Int32)(1)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_RESIDENCY_RESIDENT_IN_SHARED_MEMORY</unmanaged>
        /// <unmanaged-short>DXGI_RESIDENCY_RESIDENT_IN_SHARED_MEMORY</unmanaged-short>
        ResidentInSharedMemory = unchecked ((System.Int32)(2)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_RESIDENCY_EVICTED_TO_DISK</unmanaged>
        /// <unmanaged-short>DXGI_RESIDENCY_EVICTED_TO_DISK</unmanaged-short>
        EvictedToDisk = unchecked ((System.Int32)(3))}

    /// <summary>
    /// No documentation.
    /// </summary>
    /// <unmanaged>DXGI_RESOURCE_PRIORITY</unmanaged>
    /// <unmanaged-short>DXGI_RESOURCE_PRIORITY</unmanaged-short>
    public enum ResourcePriority : System.Int32
    {
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_RESOURCE_PRIORITY_MINIMUM</unmanaged>
        /// <unmanaged-short>DXGI_RESOURCE_PRIORITY_MINIMUM</unmanaged-short>
        Minimum = unchecked ((System.Int32)(671088640)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_RESOURCE_PRIORITY_LOW</unmanaged>
        /// <unmanaged-short>DXGI_RESOURCE_PRIORITY_LOW</unmanaged-short>
        Low = unchecked ((System.Int32)(1342177280)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_RESOURCE_PRIORITY_NORMAL</unmanaged>
        /// <unmanaged-short>DXGI_RESOURCE_PRIORITY_NORMAL</unmanaged-short>
        Normal = unchecked ((System.Int32)(2013265920)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_RESOURCE_PRIORITY_HIGH</unmanaged>
        /// <unmanaged-short>DXGI_RESOURCE_PRIORITY_HIGH</unmanaged-short>
        High = unchecked ((System.Int32)(-1610612736)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_RESOURCE_PRIORITY_MAXIMUM</unmanaged>
        /// <unmanaged-short>DXGI_RESOURCE_PRIORITY_MAXIMUM</unmanaged-short>
        Maximum = unchecked ((System.Int32)(-939524096))}

    /// <summary>
    /// No documentation.
    /// </summary>
    /// <unmanaged>DXGI_SCALING</unmanaged>
    /// <unmanaged-short>DXGI_SCALING</unmanaged-short>
    public enum Scaling : System.Int32
    {
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_SCALING_STRETCH</unmanaged>
        /// <unmanaged-short>DXGI_SCALING_STRETCH</unmanaged-short>
        Stretch = unchecked ((System.Int32)(0)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_SCALING_NONE</unmanaged>
        /// <unmanaged-short>DXGI_SCALING_NONE</unmanaged-short>
        None = unchecked ((System.Int32)(1)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_SCALING_ASPECT_RATIO_STRETCH</unmanaged>
        /// <unmanaged-short>DXGI_SCALING_ASPECT_RATIO_STRETCH</unmanaged-short>
        AspectRatioStretch = unchecked ((System.Int32)(2))}

    [System.FlagsAttribute]
    /// <summary>
    /// No documentation.
    /// </summary>
    /// <unmanaged>DXGI_SHARED_RESOURCE_FLAGS</unmanaged>
    /// <unmanaged-short>DXGI_SHARED_RESOURCE_FLAGS</unmanaged-short>
    public enum SharedResourceFlags : System.Int32
    {
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_SHARED_RESOURCE_READ</unmanaged>
        /// <unmanaged-short>DXGI_SHARED_RESOURCE_READ</unmanaged-short>
        Read = unchecked ((System.Int32)(-2147483648)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_SHARED_RESOURCE_WRITE</unmanaged>
        /// <unmanaged-short>DXGI_SHARED_RESOURCE_WRITE</unmanaged-short>
        Write = unchecked ((System.Int32)(1)),
        /// <summary>
        /// None
        /// </summary>
        /// <unmanaged>None</unmanaged>
        /// <unmanaged-short>None</unmanaged-short>
        None = unchecked ((System.Int32)(0))}

    [System.FlagsAttribute]
    /// <summary>
    /// No documentation.
    /// </summary>
    /// <unmanaged>DXGI_SWAP_CHAIN_COLOR_SPACE_SUPPORT_FLAG</unmanaged>
    /// <unmanaged-short>DXGI_SWAP_CHAIN_COLOR_SPACE_SUPPORT_FLAG</unmanaged-short>
    public enum SwapChainColorSpaceSupportFlags : System.Int32
    {
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_SWAP_CHAIN_COLOR_SPACE_SUPPORT_FLAG_PRESENT</unmanaged>
        /// <unmanaged-short>DXGI_SWAP_CHAIN_COLOR_SPACE_SUPPORT_FLAG_PRESENT</unmanaged-short>
        Present = unchecked ((System.Int32)(1)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_SWAP_CHAIN_COLOR_SPACE_SUPPORT_FLAG_OVERLAY_PRESENT</unmanaged>
        /// <unmanaged-short>DXGI_SWAP_CHAIN_COLOR_SPACE_SUPPORT_FLAG_OVERLAY_PRESENT</unmanaged-short>
        OverlayPresent = unchecked ((System.Int32)(2)),
        /// <summary>
        /// None
        /// </summary>
        /// <unmanaged>None</unmanaged>
        /// <unmanaged-short>None</unmanaged-short>
        None = unchecked ((System.Int32)(0))}

    [System.FlagsAttribute]
    /// <summary>
    /// No documentation.
    /// </summary>
    /// <unmanaged>DXGI_SWAP_CHAIN_FLAG</unmanaged>
    /// <unmanaged-short>DXGI_SWAP_CHAIN_FLAG</unmanaged-short>
    public enum SwapChainFlags : System.Int32
    {
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_SWAP_CHAIN_FLAG_NONPREROTATED</unmanaged>
        /// <unmanaged-short>DXGI_SWAP_CHAIN_FLAG_NONPREROTATED</unmanaged-short>
        Nonprerotated = unchecked ((System.Int32)(1)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_SWAP_CHAIN_FLAG_ALLOW_MODE_SWITCH</unmanaged>
        /// <unmanaged-short>DXGI_SWAP_CHAIN_FLAG_ALLOW_MODE_SWITCH</unmanaged-short>
        AllowModeSwitch = unchecked ((System.Int32)(2)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_SWAP_CHAIN_FLAG_GDI_COMPATIBLE</unmanaged>
        /// <unmanaged-short>DXGI_SWAP_CHAIN_FLAG_GDI_COMPATIBLE</unmanaged-short>
        GdiCompatible = unchecked ((System.Int32)(4)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_SWAP_CHAIN_FLAG_RESTRICTED_CONTENT</unmanaged>
        /// <unmanaged-short>DXGI_SWAP_CHAIN_FLAG_RESTRICTED_CONTENT</unmanaged-short>
        RestrictedContent = unchecked ((System.Int32)(8)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_SWAP_CHAIN_FLAG_RESTRICT_SHARED_RESOURCE_DRIVER</unmanaged>
        /// <unmanaged-short>DXGI_SWAP_CHAIN_FLAG_RESTRICT_SHARED_RESOURCE_DRIVER</unmanaged-short>
        RestrictSharedResourceDriver = unchecked ((System.Int32)(16)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_SWAP_CHAIN_FLAG_DISPLAY_ONLY</unmanaged>
        /// <unmanaged-short>DXGI_SWAP_CHAIN_FLAG_DISPLAY_ONLY</unmanaged-short>
        DisplayOnly = unchecked ((System.Int32)(32)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_SWAP_CHAIN_FLAG_FRAME_LATENCY_WAITABLE_OBJECT</unmanaged>
        /// <unmanaged-short>DXGI_SWAP_CHAIN_FLAG_FRAME_LATENCY_WAITABLE_OBJECT</unmanaged-short>
        FrameLatencyWaitAbleObject = unchecked ((System.Int32)(64)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_SWAP_CHAIN_FLAG_FOREGROUND_LAYER</unmanaged>
        /// <unmanaged-short>DXGI_SWAP_CHAIN_FLAG_FOREGROUND_LAYER</unmanaged-short>
        ForegroundLayer = unchecked ((System.Int32)(128)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_SWAP_CHAIN_FLAG_FULLSCREEN_VIDEO</unmanaged>
        /// <unmanaged-short>DXGI_SWAP_CHAIN_FLAG_FULLSCREEN_VIDEO</unmanaged-short>
        FullScreenVideo = unchecked ((System.Int32)(256)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_SWAP_CHAIN_FLAG_YUV_VIDEO</unmanaged>
        /// <unmanaged-short>DXGI_SWAP_CHAIN_FLAG_YUV_VIDEO</unmanaged-short>
        YuvVideo = unchecked ((System.Int32)(512)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_SWAP_CHAIN_FLAG_HW_PROTECTED</unmanaged>
        /// <unmanaged-short>DXGI_SWAP_CHAIN_FLAG_HW_PROTECTED</unmanaged-short>
        HwProtected = unchecked ((System.Int32)(1024)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_SWAP_CHAIN_FLAG_ALLOW_TEARING</unmanaged>
        /// <unmanaged-short>DXGI_SWAP_CHAIN_FLAG_ALLOW_TEARING</unmanaged-short>
        AllowTearing = unchecked ((System.Int32)(2048)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_SWAP_CHAIN_FLAG_RESTRICTED_TO_ALL_HOLOGRAPHIC_DISPLAYS</unmanaged>
        /// <unmanaged-short>DXGI_SWAP_CHAIN_FLAG_RESTRICTED_TO_ALL_HOLOGRAPHIC_DISPLAYS</unmanaged-short>
        RestrictedToAllHolographicDisplayS = unchecked ((System.Int32)(4096)),
        /// <summary>
        /// None
        /// </summary>
        /// <unmanaged>None</unmanaged>
        /// <unmanaged-short>None</unmanaged-short>
        None = unchecked ((System.Int32)(0))}

    /// <summary>
    /// No documentation.
    /// </summary>
    /// <unmanaged>DXGI_SWAP_EFFECT</unmanaged>
    /// <unmanaged-short>DXGI_SWAP_EFFECT</unmanaged-short>
    public enum SwapEffect : System.Int32
    {
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_SWAP_EFFECT_DISCARD</unmanaged>
        /// <unmanaged-short>DXGI_SWAP_EFFECT_DISCARD</unmanaged-short>
        Discard = unchecked ((System.Int32)(0)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_SWAP_EFFECT_SEQUENTIAL</unmanaged>
        /// <unmanaged-short>DXGI_SWAP_EFFECT_SEQUENTIAL</unmanaged-short>
        Sequential = unchecked ((System.Int32)(1)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_SWAP_EFFECT_FLIP_SEQUENTIAL</unmanaged>
        /// <unmanaged-short>DXGI_SWAP_EFFECT_FLIP_SEQUENTIAL</unmanaged-short>
        FlipSequential = unchecked ((System.Int32)(3)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_SWAP_EFFECT_FLIP_DISCARD</unmanaged>
        /// <unmanaged-short>DXGI_SWAP_EFFECT_FLIP_DISCARD</unmanaged-short>
        FlipDiscard = unchecked ((System.Int32)(4))}

    [System.FlagsAttribute]
    /// <summary>
    /// No documentation.
    /// </summary>
    /// <unmanaged>DXGI_USAGE_ENUM</unmanaged>
    /// <unmanaged-short>DXGI_USAGE_ENUM</unmanaged-short>
    public enum Usage : System.Int32
    {
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_USAGE_SHADER_INPUT</unmanaged>
        /// <unmanaged-short>DXGI_USAGE_SHADER_INPUT</unmanaged-short>
        ShaderInput = unchecked ((System.Int32)(16)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_USAGE_RENDER_TARGET_OUTPUT</unmanaged>
        /// <unmanaged-short>DXGI_USAGE_RENDER_TARGET_OUTPUT</unmanaged-short>
        RenderTargetOutput = unchecked ((System.Int32)(32)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_USAGE_BACK_BUFFER</unmanaged>
        /// <unmanaged-short>DXGI_USAGE_BACK_BUFFER</unmanaged-short>
        BackBuffer = unchecked ((System.Int32)(64)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_USAGE_SHARED</unmanaged>
        /// <unmanaged-short>DXGI_USAGE_SHARED</unmanaged-short>
        Shared = unchecked ((System.Int32)(128)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_USAGE_READ_ONLY</unmanaged>
        /// <unmanaged-short>DXGI_USAGE_READ_ONLY</unmanaged-short>
        ReadOnly = unchecked ((System.Int32)(256)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_USAGE_DISCARD_ON_PRESENT</unmanaged>
        /// <unmanaged-short>DXGI_USAGE_DISCARD_ON_PRESENT</unmanaged-short>
        DiscardOnPresent = unchecked ((System.Int32)(512)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_USAGE_UNORDERED_ACCESS</unmanaged>
        /// <unmanaged-short>DXGI_USAGE_UNORDERED_ACCESS</unmanaged-short>
        UnorderedAccess = unchecked ((System.Int32)(1024))}

    [System.FlagsAttribute]
    /// <summary>
    /// No documentation.
    /// </summary>
    /// <unmanaged>DXGI_MWA_FLAGS</unmanaged>
    /// <unmanaged-short>DXGI_MWA_FLAGS</unmanaged-short>
    public enum WindowAssociationFlags : System.Int32
    {
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_MWA_NO_WINDOW_CHANGES</unmanaged>
        /// <unmanaged-short>DXGI_MWA_NO_WINDOW_CHANGES</unmanaged-short>
        IgnoreAll = unchecked ((System.Int32)(1)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_MWA_NO_ALT_ENTER</unmanaged>
        /// <unmanaged-short>DXGI_MWA_NO_ALT_ENTER</unmanaged-short>
        IgnoreAltEnter = unchecked ((System.Int32)(2)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_MWA_NO_PRINT_SCREEN</unmanaged>
        /// <unmanaged-short>DXGI_MWA_NO_PRINT_SCREEN</unmanaged-short>
        IgnorePrintScreen = unchecked ((System.Int32)(4)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DXGI_MWA_VALID</unmanaged>
        /// <unmanaged-short>DXGI_MWA_VALID</unmanaged-short>
        Valid = unchecked ((System.Int32)(7)),
        /// <summary>
        /// None
        /// </summary>
        /// <unmanaged>None</unmanaged>
        /// <unmanaged-short>None</unmanaged-short>
        None = unchecked ((System.Int32)(0))}
}